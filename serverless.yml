service: api-FAAS

frameworkVersion: "4"

plugins:
    - serverless-dynamodb
    - serverless-offline

custom:
    stage: ${opt:stage, 'dev'}
    tableThroughputs:
        dev: 1
        default: 5
    dynamodb:
        port: 8000
        migrate: true
        inMemory: true
        convertEmptyValues: true
    serverless-dynamodb:
        stages:
            - dev
        tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
        start:
            port: 8000
            inMemory: true
            migrate: true
            convertEmptyValues: true
            enableLogs: true

provider:
    name: aws
    runtime: nodejs16.x
    region: ${opt:region, 'us-east-1'}
    memorySize: 1024
    timeout: 10
    environment:
        STAGE: ${opt:stage, 'dev'}
        DYNAMODB_TABLE_ASSINANTES: AssinantesTable
        DYNAMODB_TABLE_USUARIOS: UsuariosTable
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:DescribeTable
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
    getAssinante:
        handler: handlers/assinante.getAssinantes
        events:
            - http:
                  path: assinantes
                  method: get
                  cors: true
    createAssinante:
        handler: handlers/assinante.createAssinante
        events:
            - http:
                  path: assinantes
                  method: post
                  cors: true
    getUsuarios:
        handler: handlers/usuario.getUsuarios
        events:
            - http:
                  path: usuarios
                  method: get
                  cors: true
    createUsuario:
        handler: handlers/usuario.createUsuario
        events:
            - http:
                  path: usuarios
                  method: post
                  cors: true
    deleteUsuario:
        handler: handlers/usuario.deleteUsuario
        events:
            - http:
                  path: usuarios/{id}
                  method: delete
                  cors: true
    getLojas:
        handler: handlers/loja.getLojas
        events:
            - http:
                  path: lojas
                  method: get
                  cors: true
    createLoja:
        handler: handlers/loja.createLoja
        events:
            - http:
                  path: lojas
                  method: post
                  cors: true

resources:
    Resources:
        AssinantesTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: AssinantesTable
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                    - AttributeName: usuario_id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
                GlobalSecondaryIndexes:
                    - IndexName: GSI1
                      KeySchema:
                          - AttributeName: usuario_id
                            KeyType: HASH
                      Projection:
                          ProjectionType: ALL
        UsuariosTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: UsuariosTable
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
        LojasTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: LojasTable
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
